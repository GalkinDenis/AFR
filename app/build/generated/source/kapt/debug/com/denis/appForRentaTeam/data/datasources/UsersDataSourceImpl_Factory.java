// Generated by Dagger (https://dagger.dev).
package com.denis.appForRentaTeam.data.datasources;

import com.denis.appForRentaTeam.data.datasources.localdatasource.LocalDataSource;
import com.denis.appForRentaTeam.data.datasources.network.UsersApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class UsersDataSourceImpl_Factory implements Factory<UsersDataSourceImpl> {
  private final Provider<UsersApi> usersApiProvider;

  private final Provider<LocalDataSource> localDataSourceProvider;

  public UsersDataSourceImpl_Factory(Provider<UsersApi> usersApiProvider,
      Provider<LocalDataSource> localDataSourceProvider) {
    this.usersApiProvider = usersApiProvider;
    this.localDataSourceProvider = localDataSourceProvider;
  }

  @Override
  public UsersDataSourceImpl get() {
    return newInstance(usersApiProvider.get(), localDataSourceProvider.get());
  }

  public static UsersDataSourceImpl_Factory create(Provider<UsersApi> usersApiProvider,
      Provider<LocalDataSource> localDataSourceProvider) {
    return new UsersDataSourceImpl_Factory(usersApiProvider, localDataSourceProvider);
  }

  public static UsersDataSourceImpl newInstance(UsersApi usersApi,
      LocalDataSource localDataSource) {
    return new UsersDataSourceImpl(usersApi, localDataSource);
  }
}
