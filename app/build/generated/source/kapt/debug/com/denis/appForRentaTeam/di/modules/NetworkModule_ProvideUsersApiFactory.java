// Generated by Dagger (https://dagger.dev).
package com.denis.appForRentaTeam.di.modules;

import com.denis.appForRentaTeam.data.datasources.network.UsersApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvideUsersApiFactory implements Factory<UsersApi> {
  private final NetworkModule module;

  private final Provider<Retrofit> retrofitProvider;

  public NetworkModule_ProvideUsersApiFactory(NetworkModule module,
      Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public UsersApi get() {
    return provideUsersApi(module, retrofitProvider.get());
  }

  public static NetworkModule_ProvideUsersApiFactory create(NetworkModule module,
      Provider<Retrofit> retrofitProvider) {
    return new NetworkModule_ProvideUsersApiFactory(module, retrofitProvider);
  }

  public static UsersApi provideUsersApi(NetworkModule instance, Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(instance.provideUsersApi(retrofit));
  }
}
