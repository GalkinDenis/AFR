// Generated by Dagger (https://dagger.dev).
package com.denis.appForRentaTeam.di.modules;

import com.denis.appForRentaTeam.data.datasources.database.UsersDao;
import com.denis.appForRentaTeam.data.datasources.database.UsersRoomDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DataModule_ProvideDaoFactory implements Factory<UsersDao> {
  private final Provider<UsersRoomDatabase> dataBaseProvider;

  public DataModule_ProvideDaoFactory(Provider<UsersRoomDatabase> dataBaseProvider) {
    this.dataBaseProvider = dataBaseProvider;
  }

  @Override
  public UsersDao get() {
    return provideDao(dataBaseProvider.get());
  }

  public static DataModule_ProvideDaoFactory create(Provider<UsersRoomDatabase> dataBaseProvider) {
    return new DataModule_ProvideDaoFactory(dataBaseProvider);
  }

  public static UsersDao provideDao(UsersRoomDatabase dataBase) {
    return Preconditions.checkNotNullFromProvides(DataModule.INSTANCE.provideDao(dataBase));
  }
}
