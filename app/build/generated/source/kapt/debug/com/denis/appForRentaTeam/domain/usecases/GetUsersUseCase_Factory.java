// Generated by Dagger (https://dagger.dev).
package com.denis.appForRentaTeam.domain.usecases;

import com.denis.appForRentaTeam.domain.repository.UsersRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GetUsersUseCase_Factory implements Factory<GetUsersUseCase> {
  private final Provider<UsersRepository> usersRepositoryImplProvider;

  public GetUsersUseCase_Factory(Provider<UsersRepository> usersRepositoryImplProvider) {
    this.usersRepositoryImplProvider = usersRepositoryImplProvider;
  }

  @Override
  public GetUsersUseCase get() {
    return newInstance(usersRepositoryImplProvider.get());
  }

  public static GetUsersUseCase_Factory create(
      Provider<UsersRepository> usersRepositoryImplProvider) {
    return new GetUsersUseCase_Factory(usersRepositoryImplProvider);
  }

  public static GetUsersUseCase newInstance(UsersRepository usersRepositoryImpl) {
    return new GetUsersUseCase(usersRepositoryImpl);
  }
}
